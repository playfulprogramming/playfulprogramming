---
import SEO from "src/components/seo/seo.astro";
import Document from "src/layouts/document.astro";
import * as api from "utils/api";
import CollectionPage from "src/views/collections/collection-page.astro";
import CollectionChapter from "src/views/collections/collection-chapter.astro";
import { SubHeader } from "src/components/subheader/subheader";
import { translate } from "utils/translations";
import { Languages } from "types/index";
import { LocalPost, ExternalPost } from "src/types/CollectionInfo";
import { getMarkdownHtml } from "utils/markdown";

const params = Astro.params as {
	locale?: Languages;
	slug: string;
};

const locale = params.locale || "en";
const collection = api.getCollectionBySlug(params.slug, locale)!;

if (!collection || collection.pageLayout === "none") {
	return Astro.redirect("/404");
}

const collectionPosts = api.getPostsByCollection(params.slug, locale);
const authors = collection.authors.map(
	(authorId) => api.getPersonById(authorId, locale)!,
);

const collectionHtml = await getMarkdownHtml(collection);

const isLocalPost = (
	chapter: LocalPost | ExternalPost,
): chapter is LocalPost => {
	return (chapter as LocalPost).post !== undefined;
};

let collectionData: Array<Parameters<typeof CollectionChapter>[0]> = [];

if (collection?.chapterList?.length) {
	collectionData = collection?.chapterList.map((post, i) => {
		let title: string;
		let href: string | undefined;
		let description: string;
		let externalLink = false;
		if (isLocalPost(post)) {
			const postData = api.getPostBySlug(post.post, locale);
			title = postData?.title || "No title";
			description = postData?.description || "No description";
			href = post?.post ? `/posts/${post.post}` : undefined;
		} else {
			title = post.title;
			description = post.description || "";
			href = post.url;
			externalLink = true;
		}
		return {
			num: i + 1,
			title,
			description,
			href,
			externalLink,
			collection,
		};
	});
} else if (collectionPosts?.length) {
	collectionData = collectionPosts.map(
		({ order, title, description, slug }, i) => ({
			num: order || i + 1,
			title,
			description,
			href: `/posts/${slug}`,
			externalLink: false,
			collection,
		}),
	);
}
---

<Document size="l">
	<SEO
		slot="head"
		title={collection.title}
		description={collection.description}
		peopleData={authors}
		publishedTime={collection.published}
		type={collection.type}
		shareImage={collection.socialImg ||
			collection.coverImgMeta.relativeServerPath}
		providedLangs={collection.locales}
	/>
	<main>
		<CollectionPage
			collection={collection}
			collectionHtml={collectionHtml}
			authors={authors}
		/>
		<section class="collection-post-list-container">
			<div class="collection-post-list">
				<SubHeader tag="h2" text={translate(Astro, "desc.chapter_listing")} />
				<ol>
					{
						collectionData.map((props) => {
							return (
								<li>
									<CollectionChapter {...props} />
								</li>
							);
						})
					}
				</ol>
			</div>
		</section>
	</main>
</Document>

<style>
	.collection-post-list-container {
		background: var(--surface_primary_emphasis-none);
	}

	.collection-post-list {
		max-width: var(--max-width_m);
		margin: 0 auto;
		padding: 0 var(--site-spacing) var(--site-spacing);
	}

	.collection-post-list ol {
		list-style: none;
		padding: 0;
		margin: 0;
	}
</style>
